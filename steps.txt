mkdir spawner
    $ npm init -y
    $ npm i typescript
    $ npx tsc --init

    mkdir src
        code index.ts
    
    ----------
    npm install selenium-webdriver + types imported frmo quickfix

 "scripts": {
    "dev": "tsc -b && node dist/index.js"
  },

  -> npm run dev (to run) -> throws error coz of automation..


// for the meeting unable to join.... 
-> "Pass flags" refers to setting specific Chrome options or configurations when launching a Chrome browser instance in Selenium Grid. These flags allow you to customize the behavior of the Chrome browser to suit your automation needs. In Selenium, these flags are passed using the ChromeOptions class.

-> Passing Flags to Selenium Grid
When working with Selenium Grid, you pass these flags to the remote WebDriver by including them in the ChromeOptions and passing the capabilities to the remote driver.

( https://stackoverflow.com/questions/53039551/selenium-webdriver-modifying-navigator-webdriver-flag-to-prevent-selenium-detec )



-------
basic format of xpath (https://youtu.be/5LV4z_-91WY?list=PLL34mf651faO1vJWlSoYYBJejN9U_rwy-&t=728)

xpath = //tagname[@attribute='Value']

------------

issue poped up : the nameInput box that we are targetting, its id is changing from c11 to c12. hence, this can break the project. Hence, we need to use a robust path. hence, using xpath for it instead of trying and going via the id route.


-------------


how to record screen??

-> remember that we can share screen? in it, we share teh entire screen.. So, if that can happen, then, we can simply record the screen without screen share as well. So, for that we use,

navigator.mediaDevices.getDisplayMedia()

 is a web API that allows you to capture a video stream of the user's screen, a specific application window, or a browser tab. This method is widely used for screen recording, screen sharing, or streaming purposes (e.g., in apps like Zoom, Google Meet, or screen-recording tools).

 ////////
----------------------
navigator.mediaDevices.getDisplayMedia().then(x =>console.log(x)).catch(e=>console.log(e));

console shows : 

MediaStream {id: '568bfdbe-1f7e-40da-8bcc-2435fd66cf3e', active: true, onaddtrack: null, onremovetrack: null, onactive: null, …}


-----------
// screen recording code checked in console

window.navigator.mediaDevices.getDisplayMedia().then(stream=>{
    const videoEl = document.createElement('video');
  videoEl.srcObject = stream;
    videoEl.play();
  document.getElementsByClassName('qdOxv-fmcmS-yrriRe')[0].appendChild(videoEl);
    
});

what we did here?

found out a classname from inspect element. then, uss element ka 1st occurence arr[0] me ek html element named video bana ke dale.
aur usme screen share wala stream daal ke play kiye ki chal ra h ki nai..

-----------------

now that the screen is being recorded, i am having trouble injecting the js script to show the screen that is being recorded for screenRecording. Hence, what i am going to do is to just get the stream and use webRTC, delegating the recording part to the server.

let's try mediaRecorder locally and save that.
-> so, googled, media recorder record video browser

https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element

